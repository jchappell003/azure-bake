{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },        
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_RAGRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "storageAccesstier": {
            "type": "string",
            "defaultValue": "Hot",
            "allowedValues": [
                "Hot",
                "Cold"
            ],
            "metadata": {
                "description": "Sets the billing tier for the storage."
            }
        },
        "storageAccountName": {
            "type": "string"
        },
        "storageKind": {
            "type": "string",
            "defaultValue": "StorageV2"
        },
        "storageTier": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "IsHttpsTrafficOnly": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Allows https traffic only to storage service if sets to true."
            }
        },
        "IsHnsEnabled": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Account HierarchicalNamespace enabled if sets to true."
            }
        },
        "NetworkAcls" : {
            "type" : "object",
            "defaultvalue" : { "bypass": "None" , "defaultAction": "Allow","ipRules" : [],"virtualNetworkRules" : []  }
        }    
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2019-06-01",
            "sku": {
                "name": "[parameters('storageAccountType')]",
                "tier": "[parameters('storageTier')]"                            
            },
            "kind": "[parameters('storageKind')]",
          "properties": {
            "accessTier": "[parameters('storageAccessTier')]",
            "isHnsEnabled" : "[parameters('IsHnsEnabled')]",
            "supportsHttpsTrafficOnly" : "[parameters('IsHttpsTrafficOnly')]",            
            "networkAcls": {
                            "bypass": "[parameters('NetworkAcls').bypass]",
                            "defaultAction": "Deny",
                            "copy" : [{
                                "name" : "ipRules",
                                "count" : "[length(parameters('NetworkAcls').ipRules)]",                                
                                "input" : {
                                    "value": "[parameters('NetworkAcls').ipRules[copyIndex('ipRules')].value]",
                                    "action": "[parameters('NetworkAcls').ipRules[copyIndex('ipRules')].action]"
                                    }
                            },
                            {
                                    "name" : "virtualNetworkRules",
                                    "count" : "[length(parameters('NetworkAcls').virtualNetworkRules)]",
                                    "input" : {
                                                "id": "[resourceId(subscription().subscriptionId,parameters('NetworkAcls').virtualNetworkRules[copyIndex('virtualNetworkRules')].vnetResourceGroup, 'Microsoft.Network/virtualNetworks/subnets', parameters('NetworkAcls').virtualNetworkRules[copyIndex('virtualNetworkRules')].vnetName, parameters('NetworkAcls').virtualNetworkRules[copyIndex('virtualNetworkRules')].subnetName)]",
                                                "action": "[parameters('NetworkAcls').virtualNetworkRules[copyIndex('virtualNetworkRules')].action]"
                                    }
                                }                            
                            ]                                          
                        },
            "azureFilesIdentityBasedAuthentication": {
            "directoryServiceOptions": "None"
            }
                    
          },
          "tags": {
            "Metrics": "*"
          }
        }        
    ]
}